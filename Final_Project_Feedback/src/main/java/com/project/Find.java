package com.project;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.util.HashMap;import java.util.Map;@WebServlet("/Find")public class Find extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {        Connection con = null;        try {            response.setContentType("text/html");            PrintWriter out = response.getWriter();            con = DBConnect.connect();            String subject = request.getParameter("subject");            // Define the units and categories you want to count            String[] units = {"co1", "co2", "co3", "co4", "co5"};            String[] categories = {"poor", "average", "good", "excellent"};            // Create a map to store counts for each unit and category            Map<String, Map<String, Integer>> unitCategoryCounts = new HashMap<>();            // Loop through units and categories            for (String unit : units) {                Map<String, Integer> categoryCounts = new HashMap<>();                for (String category : categories) {                    String query = "SELECT COUNT(*) FROM subjects  WHERE subject = ? AND "+ unit + " = ? ;";                    PreparedStatement st = con.prepareStatement(query);                    st.setString(1, subject);                    st.setString(2, category);                    ResultSet rst = st.executeQuery();                    if (rst.next()) {                        int count = rst.getInt(1);                        categoryCounts.put(category, count);                    }                }                unitCategoryCounts.put(unit, categoryCounts);            }            // Display the table            out.println("<h1>" + subject + "</h1>");            out.println("<table border='1' id='dataTable'>");            out.println("<tr><th>Unit</th><th>Poor</th><th>Average</th><th>Good</th><th>Excellent</th></tr>");            for (String unit : units) {                out.println("<tr><td>" + unit + "</td>");                Map<String, Integer> categoryCounts = unitCategoryCounts.get(unit);                for (String category : categories) {                    out.println("<td>" + categoryCounts.getOrDefault(category, 0) + "</td>");                }                out.println("</tr>");            }            out.println("</table>");            // Download button            out.println("<button class='download-btn' onclick='downloadData();'>Download Data</button>");            // JavaScript for downloading data using html2pdf library            out.println("<script src='https://rawgit.com/eKoopmans/html2pdf/master/dist/html2pdf.bundle.js'></script>");            out.println("<script>");            out.println("function downloadData() {");            out.println("var element = document.getElementById('dataTable');");            out.println("html2pdf(element);");            out.println("}");            out.println("</script>");        } catch (Exception e) {            // Log the exception for debugging purposes            e.printStackTrace();            response.setContentType("text/html");            PrintWriter out = response.getWriter();            out.println("An error occurred: " + e.getMessage());        } finally {            // Close resources in a finally block            if (con != null) {                try {                    con.close();                } catch (Exception e) {                    e.printStackTrace();                }            }        }    }}